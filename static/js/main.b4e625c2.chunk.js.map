{"version":3,"sources":["components/Collapsible-Sidebar.js","components/ClientCreation-Form.js","components/Header.js","components/PageHeader.js","components/ReadTable.js","App.js","reportWebVitals.js","index.js"],"names":["CollapsibleSidebar","React","openTasks","setOpenTasks","openPMO","setOpenPMO","openCMS","setOpenCMS","className","List","sx","width","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","ListItemText","primary","marginTop","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","pl","fontSize","useStyles","makeStyles","field1","margin","field2","field3","lables","marginLeft","CreateForm","useState","store","setStore","login","setLogin","useEffect","authStore","localStorage","getItem","console","log","classes","anchorEl","setAnchorEl","open","Boolean","handleClose","value","setValue","initialContacts","label","title","contactSchema","firstName","lastName","email","contactNumber","otherContactNumber","contacts","setContacts","designation","brandname","clientname","domain","baselocation","companyaddress","primaryContact","secondaryContact","tertiaryContact","otherContact1","formData","setformData","Object","keys","length","n","setN","setContactFormvalue","e","new_form","target","id","name","inputField","map","field","data","Grid","item","xs","TextField","variant","onChange","fullWidth","size","setformvalue","handleOthers","d","currentTarget","dataset","submitForm","a","tabs","contact","Tab","Switch","defaultChecked","color","Typography","required","Box","minWidth","FormControl","InputLabel","Select","input","OutlinedInput","MenuItem","Button","type","button","typography","TabContext","borderTop","borderBottom","borderColor","TabList","newValue","aria-haspopup","aria-controls","aria-expanded","undefined","event","KeyboardArrowDownRounded","Menu","maxHeight","overflow","onClose","MenuListProps","Array","i","data-label","data-title","TabPanel","container","spacing","columnSpacing","sm","md","root","Header","iconStyle","menuStyle","searchText","setSearchText","mobileView","drawerOpen","state","setState","setResponsiveness","window","innerWidth","prevState","addEventListener","removeEventListener","leftMenu","HomeRounded","ArrowBackRounded","ArrowForwardRounded","rightMenu","align","mt","mr","IconButton","SearchRounded","AppBar","Toolbar","edge","MenuRounded","Drawer","anchor","menu","marginRight","userAdmin","textAlign","paddingRight","buttons","cimstext","position","left","PageHeader","sortBy","setSortBy","user","justifyContent","to","style","backgroundColor","labelId","values","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","palette","grey","common","black","body","StyledTableRow","TableRow","action","hover","border","createData","company_uid","company_name","primary_contact","clientsList","CIMSTable","TableContainer","Paper","Table","aria-label","TableHead","TableBody","client","scope","endIcon","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e625c2.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport { Typography } from \"@mui/material\";\r\nimport '../styles/SidebarStyle.css'\r\n\r\nexport default function CollapsibleSidebar() {\r\n  const [openTasks, setOpenTasks] = React.useState(false);\r\n  const [openPMO, setOpenPMO] = React.useState(false);\r\n  const [openCMS, setOpenCMS] = React.useState(false);\r\n\r\n  const handleClickTasks = () => {\r\n    setOpenTasks(!openTasks);\r\n  };\r\n  const handleClickPMO = () => {\r\n    setOpenPMO(!openPMO);\r\n  };\r\n  const handleClickCMS = () => {\r\n    setOpenCMS(!openCMS);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mui-sidebar-div\">\r\n        <List\r\n            sx={{ width: \"100%\", maxWidth: 220, bgcolor: \"background.paper\"}}\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            >\r\n            <ListItemButton className=\"Listitem\">\r\n                <ListItemText primary=\"My Profile\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickTasks}>\r\n                <ListItemText primary=\"Tasks\" />\r\n                {openTasks ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openTasks} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 ,fontSize:\"30px\"}}>\r\n                    <ListItemText primary=\"Create Profile\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Reviews\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"Network\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"Contract Mgmt\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickPMO}>\r\n                <ListItemText primary=\"PMO\" />\r\n                {openPMO ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openPMO} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Projects\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Create Project\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Allocations\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"CIMS\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickCMS}>\r\n                <ListItemText primary=\"CMS\" />\r\n                {openCMS ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openCMS} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"POW/SO\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Invoicing\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n            \r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"R&R\" />\r\n            </ListItemButton>\r\n        </List>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@mui/material'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Switch from '@mui/material/Switch';\r\nimport { Box, Tab, Grid, TextField, Button, MenuItem, Menu, FormControl } from \"@mui/material\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport { KeyboardArrowDownRounded as KeyboardArrowDownRoundedIcon } from '@mui/icons-material';\r\nimport '../styles/FormStyle.css'\r\n\r\nconst useStyles = makeStyles({  \r\n    field1:{\r\n        width:'98%',\r\n        margin:'1%'\r\n    },\r\n    field2:{\r\n        margin:'1%',\r\n    },   \r\n    field3:{\r\n        width:'78%',\r\n        margin:'1%'\r\n    },\r\n    lables:{\r\n        marginLeft:'1%',\r\n        marginTop:'1%'\r\n    }\r\n})\r\n\r\nfunction CreateForm(){\r\n\r\n    const [store,setStore] = useState(\"\")\r\n    const [login,setLogin] = useState(true)\r\n\r\n    useEffect(() =>{\r\n        authStore()\r\n    },[])\r\n\r\n    const authStore= ()=>{\r\n\r\n        let store = localStorage.getItem('token')\r\n        if(store && login)\r\n        {setLogin(true)\r\n         setStore(store) \r\n         console.log(store)  \r\n        }   \r\n    }\r\n\r\n    const classes = useStyles()\r\n    const url = \"http://localhost:4000//submitform\"\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);     \r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }; \r\n    const [value, setValue] = useState('primaryContact');\r\n    const initialContacts = [\r\n        {label: 'Primary Contact', title: 'primaryContact'},\r\n        {label: 'Secondary Contact', title: 'secondaryContact'},\r\n        {label: 'Tertiary Contact', title: 'tertiaryContact'}\r\n    ];\r\n    const contactSchema = {\r\n        title:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\",\r\n        email:\"\",\r\n        contactNumber:\"\",\r\n        otherContactNumber:\"\",\r\n    };\r\n    const [contacts, setContacts] = useState(initialContacts);\r\n\r\n\r\n    const [formData,setformData] = useState({\r\n        designation:\"\",\r\n        brandname:\"\",\r\n        clientname:\"\",\r\n        domain:\"\",\r\n        baselocation:\"\",\r\n        companyaddress:\"\",\r\n        contacts:{\r\n            primaryContact:{\r\n                title:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                email:\"\",\r\n                contactNumber:\"\",\r\n                otherContactNumber:\"\",\r\n            },\r\n            secondaryContact:{\r\n                title:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                email:\"\",\r\n                contactNumber:\"\",\r\n                otherContactNumber:\"\",\r\n            },\r\n            tertiaryContact:{\r\n                title:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                email:\"\",\r\n                contactNumber:\"\",\r\n                otherContactNumber:\"\",\r\n            },\r\n            otherContact1:{\r\n                title:\"\",\r\n                firstName:\"\",\r\n                lastName:\"\",\r\n                email:\"\",\r\n                contactNumber:\"\",\r\n                otherContactNumber:\"\",\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n    const [n, setN] = useState(Object.keys(formData.contacts).length);\r\n    const setContactFormvalue=(e)=>{\r\n        let new_form = {...formData}\r\n        e.target.id?\r\n        new_form['contacts'][e.target.name][e.target.id] = e.target.value:\r\n        new_form[e.target.name] = e.target.value;\r\n        console.log(Object.keys(new_form.contacts).length);\r\n        if (new_form.contacts[`otherContact${n-3}`].email!=='' && Object.keys(new_form.contacts).length <= n){\r\n            new_form['contacts'] = {...new_form['contacts'], [`otherContact${n-2}`]:{...contactSchema}};\r\n            setN(Object.keys(new_form.contacts).length);\r\n        }\r\n        setformData(new_form);\r\n        console.log(new_form)\r\n    }\r\n\r\n    const fields = [\r\n        {id: 'title', label: 'Title'},\r\n        {id: 'firstName', label: 'First name'},\r\n        {id: 'lastName', label: 'Last name'},\r\n        {id: 'email', label: 'Email address'},\r\n        {id: 'contactNumber', label: 'Contact Number'},\r\n        {id: 'otherContactNumber', label: 'Other contact number'}\r\n    ];\r\n\r\n    const inputField = fields.map(field => {\r\n        const data = formData.contacts[value];\r\n        return(\r\n            <Grid item xs={4} key={`${value}.${field.id}`}>\r\n                <TextField \r\n                    variant=\"outlined\"\r\n                    label={field.label}\r\n                    name={value}\r\n                    id={field.id}\r\n                    value={data[field.id]}\r\n                    onChange={setContactFormvalue}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                />\r\n            </Grid>\r\n        );\r\n    });\r\n\r\n    const setformvalue=(e)=>{\r\n        let new_form = {...formData}\r\n        new_form[e.target.name] = e.target.value\r\n        setformData(new_form)\r\n        console.log(new_form)\r\n    }\r\n\r\n    const handleOthers = (e) => {\r\n        const d = e.currentTarget.dataset;\r\n        setContacts([...initialContacts, {...d}]);\r\n        setValue(d.title);\r\n        handleClose();\r\n    };\r\n    \r\n    const submitForm = async(e) =>{\r\n        console.log(formData)\r\n        let token = \"Bearer \"+ store\r\n        // try {\r\n        //     await Axios.post(url , {\r\n        //                            headers: {\r\n        //                            'Authorization': 'token'\r\n        //                            },\r\n        //                            formData\r\n        //                             }) \r\n        //     .then(res=>console.log(res))   \r\n        // } catch (error) {\r\n        //     console.log(error)\r\n        // }      \r\n    }\r\n\r\n    const tabs = contacts.map(contact =>\r\n        <Tab key={contact.title} label={contact.label} value={contact.title}/>\r\n    );\r\n\r\n    return(\r\n        <>\r\n            <div className=\"FormContainer\">\r\n                \r\n                <div className=\"form-header\">\r\n                    <h2>\r\n                        Client Information\r\n                    </h2>\r\n                    \r\n                    <div className=\"header-end\">\r\n                        <div>\r\n                            <p>Edit mode</p>\r\n                            <Switch defaultChecked color=\"success\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-body\">    \r\n                    <form>\r\n                        <Typography className={classes.lables}>\r\n                            Legal Name of the entity\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field1}\r\n                            label=\"enter designation\"\r\n                            variant=\"outlined\"\r\n                            name=\"designation\"\r\n                            fullWidth\r\n                            required\r\n                            size=\"small\"\r\n                            onChange={(e)=>{setformvalue(e)}}\r\n                            \r\n                        />\r\n                        <div className=\"align-form-fields\">\r\n                            <Typography>\r\n                                Brand Name\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field2}\r\n                                label=\"enter name\"\r\n                                variant=\"outlined\"\r\n                                name=\"brandname\"\r\n                                fullWidth\r\n                                required\r\n                                size=\"small\"\r\n                                onChange={(e)=>{setformvalue(e)}}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"right-float-fields\">\r\n                            <Typography>\r\n                                Domain/Sector\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field2}\r\n                                label=\"enter domain/sector\"\r\n                                variant=\"outlined\"\r\n                                name=\"domain\"\r\n                                fullWidth\r\n                                required\r\n                                size=\"small\"\r\n                                onChange={(e)=>{setformvalue(e)}}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"align-form-fields\">\r\n                            <Typography>\r\n                                Base Location\r\n                            </Typography>\r\n                            <TextField\r\n                                className={classes.field2}\r\n                                label=\"enter location\"\r\n                                variant=\"outlined\"\r\n                                name=\"baselocation\"\r\n                                fullWidth\r\n                                required\r\n                                size=\"small\"\r\n                                onChange={(e)=>{setformvalue(e)}}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"right-float-fields\">\r\n                            <Typography>\r\n                                Active Client\r\n                            </Typography>\r\n                            <Box sx={{ minWidth: 120 }} className={classes.field2}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"label\">Select a Client name</InputLabel>\r\n                                <Select\r\n                                name=\"clientname\"\r\n                                onChange={(e)=>{setformvalue(e)}}\r\n                                size=\"small\"\r\n                                input={<OutlinedInput label=\"Select a Client name\" />}\r\n                                >\r\n                                <MenuItem value={\"client 1\"}>client 1</MenuItem>\r\n                                <MenuItem value={\"client 2\"}>client 2</MenuItem>\r\n                                <MenuItem value={\"client 3\"}>client 3</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            </Box>\r\n                        </div>\r\n\r\n                        <Typography className={classes.lables}>\r\n                            Complete address of the company\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field3}\r\n                            label=\"Enter location\"\r\n                            variant=\"outlined\"\r\n                            name=\"companyaddress\"\r\n                            fullWidth\r\n                            required\r\n                            size=\"small\"\r\n                            onChange={(e)=>{setformvalue(e)}}\r\n                        />\r\n                        <Button\r\n                        onClick={submitForm}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        id=\"save-btn\"\r\n                        className={classes.button}\r\n                        >\r\n                        save\r\n                        </Button>\r\n                        \r\n                    </form>\r\n                \r\n                    <div className=\"contact-form\">\r\n                        <Box sx={{width: '100%', typography: 'body1'}}>\r\n                        <TabContext value={value}>\r\n                            <Box sx={{ borderTop: 2, borderBottom: 2, borderColor: 'divider' }}>\r\n                                <TabList onChange={(e, newValue) => setValue(newValue)}>\r\n                                    {tabs}\r\n                                    <FormControl size=\"small\">\r\n                                        <Button \r\n                                            size=\"small\" \r\n                                            id=\"othersBtn\" \r\n                                            sx={{color: 'gray', borderColor: 'white'}} \r\n                                            variant=\"outlined\"\r\n                                            aria-haspopup=\"true\"\r\n                                            aria-controls=\"others\"\r\n                                            aria-expanded={open ? 'true' : undefined}\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <KeyboardArrowDownRoundedIcon sx={{fontSize: \"2.5rem\"}}/>\r\n                                        </Button>\r\n                                        <Menu\r\n                                            id='others'\r\n                                            sx={{maxHeight: 230, overflow: 'visible'}}\r\n                                            anchorEl={anchorEl}\r\n                                            open={open}\r\n                                            onClose={handleClose}\r\n                                            MenuListProps={{\r\n                                                'aria-labelledby': 'othersBtn',\r\n                                            }}\r\n                                        >\r\n                                            {[...Array(n-3)].map((e, i) => {\r\n                                                return(\r\n                                                    <MenuItem\r\n                                                        key={i+1}\r\n                                                        data-label={`Other Contact ${i+1}`}\r\n                                                        data-title={`otherContact${i+1}`}\r\n                                                        onClick={handleOthers}\r\n                                                    >\r\n                                                    {`Other Contact ${i+1}`}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })}\r\n                                        </Menu>\r\n                                    </FormControl>\r\n                                </TabList>\r\n                            </Box>\r\n                            <TabPanel value={value}>\r\n                                <Grid container spacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                                    {inputField}\r\n                                </Grid>\r\n                            </TabPanel>\r\n                        </TabContext>\r\n                    </Box> \r\n                    </div>\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateForm\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AppBar,\r\n        Toolbar,\r\n        FormControl,\r\n        TextField,\r\n        IconButton,\r\n        Drawer,\r\n        Typography} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { HomeRounded as HomeRoundedIcon,\r\n         ArrowBackRounded as ArrowBackRoundedIcon,\r\n         ArrowForwardRounded as ArrowForwardRoundedIcon,\r\n         SearchRounded as SearchRoundedIcon,\r\n         MenuRounded as MenuRoundedIcon} from '@mui/icons-material';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginLeft: 'auto',\r\n    }\r\n});\r\n\r\nexport default function Header() {\r\n    const iconStyle = {color: 'gray', fontSize: '2.5rem', margin: '0.5rem auto'};\r\n    const menuStyle = {color: 'gray', fontSize: '2.5rem', margin: '0.5rem 1.5rem'};\r\n    const searchStyle = {color: 'gray', fontSize: '2.5rem'};\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false\r\n    });\r\n\r\n    const classes = useStyles();\r\n    \r\n    const { mobileView, drawerOpen } = state;\r\n    \r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n          return window.innerWidth < 768\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        };\r\n    \r\n        setResponsiveness();\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    \r\n        return () => {\r\n          window.removeEventListener(\"resize\", () => setResponsiveness());\r\n        }\r\n    }, []);\r\n\r\n\r\n    const leftMenu = (\r\n        <div>\r\n                <HomeRoundedIcon sx={iconStyle} />\r\n                <ArrowBackRoundedIcon sx={iconStyle} />\r\n                <ArrowForwardRoundedIcon sx={iconStyle} />\r\n        </div>\r\n    );\r\n\r\n    const rightMenu = (\r\n        <div className={classes.root}>\r\n            <form>\r\n                <FormControl>\r\n                    <Typography variant=\"body1\" align=\"center\" mt={2} mr={1}>\r\n                        Username\r\n                    </Typography>\r\n                </FormControl>\r\n                <FormControl sx={{width: 160}}>\r\n                    <TextField\r\n                        label=\"enter user name\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        margin=\"dense\"\r\n                    />\r\n                </FormControl>\r\n                <IconButton\r\n                type=\"submit\"\r\n                >\r\n                <SearchRoundedIcon sx={searchStyle} />\r\n                </IconButton>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n            <Toolbar className=\"toolbar\">\r\n                {leftMenu}\r\n                {rightMenu}\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n        return (\r\n          <Toolbar>\r\n            <IconButton\r\n              {...{\r\n                edge: \"start\",\r\n                color: \"inherit\",\r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n              }}\r\n            >\r\n              <MenuRoundedIcon sx={menuStyle} />\r\n            </IconButton>\r\n            <Drawer\r\n                {...{\r\n                    anchor: \"top\",\r\n                    open: drawerOpen,\r\n                    onClose: handleDrawerClose,\r\n                }}\r\n                >\r\n                <div>{rightMenu}</div>\r\n            </Drawer>\r\n            <div>{leftMenu}</div>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <header>\r\n            <AppBar color=\"transparent\">\r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </AppBar>\r\n        </header>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport {Button,\r\n        FormControl,\r\n        Grid,\r\n        InputLabel,\r\n        MenuItem,\r\n        Select,\r\n        Typography} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    menu: {\r\n        marginTop: '6rem',\r\n        marginRight: '5rem'\r\n    },\r\n    userAdmin: {\r\n        textAlign: 'right',\r\n        paddingRight: '2.5rem',\r\n    },\r\n    buttons: {\r\n        marginTop: '0.5rem',\r\n        marginLeft: '25%',\r\n    },\r\n    cimstext:{\r\n        position:'absolute',\r\n        left:'16%'\r\n    }\r\n});\r\n\r\nexport default function PageHeader() {\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const classes = useStyles();\r\n    const values = [\"None\",\r\n                    \"By ID\",\r\n                    \"By location\",\r\n                    \"By start date\",\r\n                    \"By Status\",\r\n                    \"By associate name\",\r\n                    \"By CompanyUID\"\r\n                ];\r\n    const handleSortBy = (e) => {\r\n        if (e.target.value===\"None\") {\r\n            setSortBy(\"\");\r\n        } else {\r\n            setSortBy(e.target.value);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className={classes.menu}>\r\n            <div className={classes.user}>\r\n                <Typography variant=\"body1\" className={classes.userAdmin}>\r\n                    User-Admin/Approver\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.buttons}>\r\n                <Grid \r\n                    justifyContent=\"space-between\"\r\n                    container \r\n                >\r\n                    <Grid item >\r\n                        <Typography variant=\"h4\" className={classes.cimstext}>\r\n                            CIMS\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to='/createclient'>\r\n                            <Button variant=\"contained\" style={{backgroundColor: 'chocolate'}}>\r\n                                Create a customer\r\n                            </Button>\r\n                        </Link>\r\n                        <FormControl size=\"small\" sx={{ minWidth: 120, margin: '0 2.5rem 0 1rem' }}>\r\n                            <InputLabel id=\"sortBy\">sort by</InputLabel>\r\n                            <Select labelId=\"sortBy\"\r\n                                id=\"select\" \r\n                                value={sortBy}\r\n                                label=\"sortBy\"\r\n                                onChange={handleSortBy}\r\n                            >\r\n                                {values.map((values) => (\r\n                                    <MenuItem\r\n                                        key={values}\r\n                                        value={values}\r\n                                    >\r\n                                    {values}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport '../styles/FormStyle.css'\r\n\r\n\r\n\r\n\r\n//todo\r\n\r\n{/*\r\n\r\n    sprint 1 todo\r\n    - remove preventdefault for form\r\n    - read table - logics\r\n    x - routing\r\n    x - integrate with backend\r\n\r\n\r\n    table overflow\r\n    logic for => edit action, clicking on specific user\r\n    axios get request fn\r\n*/}\r\n\r\nfunction EditButton() {\r\n  return (\r\n    <div>\r\n      <Button variant=\"fab\" color=\"purple\" endIcon={<EditIcon />}>\r\n        Edit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.grey[300],\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 15,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nfunction createData(id, company_uid, company_name, primary_contact, action ) {\r\n  return { id, company_uid, company_name, primary_contact, action };\r\n}\r\n\r\nconst clientsList = [\r\n  createData(1, \"PQ127z\", \"Raymond Tech. Pvt. Ltd.\", \"Jhon Dave\" ),\r\n  createData(2, \"YTr780\", \"Vimsl & Co.\", \"Vimal K\"),\r\n  createData(3, \"WY584p\", \"Bend Solution\", \"Harsha Bendi\"),\r\n  createData(4, \"CB456u\", \"Alpha Inc\", \"Naman K\"),\r\n  createData(5, \"Eh23yu\", \"Meta Inc\", \"Sunny B\"), \r\n];\r\n\r\nfunction CIMSTable() {\r\n  return (\r\n\r\n    <div className=\"FormContainer\"> {/*//using form container's alignment*/}\r\n        <TableContainer component={Paper} align=\"right\" >\r\n        <Table sx={{ maxWidth: '100%' }} aria-label=\"customized table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <StyledTableCell>ID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">CompanyUID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Company Name</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Primary Contact</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Action</StyledTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {clientsList.map((client) => (\r\n                <StyledTableRow key={client.id}>\r\n                <StyledTableCell component=\"th\" scope=\"client\">\r\n                    {client.id}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client.company_uid}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client.company_name}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client.primary_contact}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{EditButton()}</StyledTableCell>\r\n                </StyledTableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CIMSTable;","import './App.css';\r\nimport CollapsibleSidebar from './components/Collapsible-Sidebar'\r\nimport CreateForm from './components/ClientCreation-Form';\r\nimport { BrowserRouter as Router , Route ,Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport PageHeader from './components/PageHeader';\r\nimport CIMSTable from './components/ReadTable';\r\n\r\nfunction App() {\r\n  return (    \r\n    <div>\r\n        <>\r\n          <Header/>\r\n          <CollapsibleSidebar/>    \r\n        </>\r\n        \r\n        <Router>\r\n          <Routes>\r\n          <Route exact path='/' element={\r\n                                          <>\r\n                                            <PageHeader />\r\n                                            <CIMSTable/>\r\n                                          </>} >\r\n          </Route>\r\n\r\n          <Route path='/createclient' element={<>\r\n                                            <PageHeader />\r\n                                            <CreateForm/>\r\n                                          </>} >\r\n          </Route>\r\n\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}