{"version":3,"sources":["components/Collapsible-Sidebar.js","components/UseForm.js","components/ClientCreation-Form.js","components/Header.js","components/PageHeader.js","components/ReadTable.js","App.js","reportWebVitals.js","index.js"],"names":["CollapsibleSidebar","React","openTasks","setOpenTasks","openPMO","setOpenPMO","openCMS","setOpenCMS","className","List","sx","width","maxWidth","bgcolor","component","ListItemButton","ListItemText","primary","marginTop","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","pl","fontSize","initialFormValues","designation","brandname","clientname","domain","baselocation","companyaddress","contacts","primaryContact","title","firstName","lastName","email","contactNumber","otherContactNumber","secondaryContact","tertiaryContact","contactSchema","initialContacts","label","fields","id","UseForm","useState","JSON","parse","stringify","errorValues","seterrorValues","anchorEl","setAnchorEl","open","Boolean","handleClose","value","setValue","setContacts","formData","setformData","Object","keys","length","n","setN","addOthers","setAddOthers","errors","setErrors","validateOptional","type","fieldValues","temp","test","values","every","x","validateBasic","console","log","setTimeout","setStore","login","setLogin","submitForm","e","a","preventDefault","token","localStorage","getItem","axios","post","headers","then","res","alert","resetForm","setformvalue","new_form","target","name","validate","handleClick","event","currentTarget","handleOthers","d","dataset","handleAddOthers","new_errors","authStore","store","handleSaveBtn","useStyles","makeStyles","field1","margin","field2","field3","CreateForm","useNavigate","setError","useEffect","window","location","reload","classes","inputField","map","field","Grid","item","xs","sm","md","TextField","variant","onChange","onBlur","fullWidth","size","autoComplete","error","helperText","tabs","contact","Tab","textTransform","dropDown","FormControl","Button","color","borderColor","undefined","KeyboardArrowDownRounded","Menu","maxHeight","overflow","onClose","MenuListProps","Array","i","MenuItem","Switch","defaultChecked","Typography","lables","required","container","spacing","direction","Box","minWidth","InputLabel","Select","input","OutlinedInput","to","button","disabled","typography","TabContext","borderTop","borderBottom","TabList","newValue","AddRounded","TabPanel","columnSpacing","root","marginLeft","Header","menuStyle","searchText","setSearchText","mobileView","drawerOpen","state","setState","setResponsiveness","innerWidth","prevState","addEventListener","removeEventListener","leftMenu","HomeRounded","rightMenu","align","mt","mr","IconButton","SearchRounded","AppBar","Toolbar","edge","MenuRounded","Drawer","anchor","menu","marginRight","userAdmin","textAlign","paddingRight","buttons","cimstext","position","left","PageHeader","sortBy","setSortBy","user","justifyContent","style","backgroundColor","labelId","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","palette","grey","common","black","body","StyledTableRow","TableRow","action","hover","border","CIMSTable","clientsList","setclientsList","data","tokenObject","Token","setItem","get","list","TableContainer","Paper","Table","TableHead","TableBody","client","idx","scope","_id","endIcon","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb12cc77.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport { Typography } from \"@mui/material\";\r\nimport '../styles/SidebarStyle.css'\r\n\r\nexport default function CollapsibleSidebar() {\r\n  const [openTasks, setOpenTasks] = React.useState(false);\r\n  const [openPMO, setOpenPMO] = React.useState(false);\r\n  const [openCMS, setOpenCMS] = React.useState(false);\r\n\r\n  const handleClickTasks = () => {\r\n    setOpenTasks(!openTasks);\r\n  };\r\n  const handleClickPMO = () => {\r\n    setOpenPMO(!openPMO);\r\n  };\r\n  const handleClickCMS = () => {\r\n    setOpenCMS(!openCMS);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mui-sidebar-div\">\r\n        <List\r\n            sx={{ width: \"100%\", maxWidth: 220, bgcolor: \"background.paper\"}}\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            >\r\n            <ListItemButton className=\"Listitem\">\r\n                <ListItemText primary=\"My Profile\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickTasks}>\r\n                <ListItemText primary=\"Tasks\" />\r\n                {openTasks ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openTasks} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 ,fontSize:\"30px\"}}>\r\n                    <ListItemText primary=\"Create Profile\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Reviews\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"Network\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"Contract Mgmt\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickPMO}>\r\n                <ListItemText primary=\"PMO\" />\r\n                {openPMO ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openPMO} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Projects\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Create Project\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Allocations\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"CIMS\" />\r\n            </ListItemButton>\r\n\r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\" onClick={handleClickCMS}>\r\n                <ListItemText primary=\"CMS\" />\r\n                {openCMS ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItemButton>\r\n            <Collapse in={openCMS} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"POW/SO\" />\r\n                </ListItemButton>\r\n                </List>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItemButton className=\"Listitem\" sx={{ pl: 5 }}>\r\n                    <ListItemText primary=\"Invoicing\" />\r\n                </ListItemButton>\r\n                </List>\r\n            </Collapse>\r\n            \r\n            <ListItemButton sx={{ marginTop:\"13px\" }} className=\"Listitem\">\r\n                <ListItemText primary=\"R&R\" />\r\n            </ListItemButton>\r\n        </List>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n","import {useEffect, useState} from \"react\";\nimport axios from 'axios'\nconst initialFormValues = {\n    designation:\"\",\n    brandname:\"\",\n    clientname:\"\",\n    domain:\"\",\n    baselocation:\"\",\n    companyaddress:\"\",\n    contacts:{\n        primaryContact:{\n            title:\"\",\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            contactNumber:\"\",\n            otherContactNumber:\"\",\n        },\n        secondaryContact:{\n            title:\"\",\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            contactNumber:\"\",\n            otherContactNumber:\"\",\n        },\n        tertiaryContact:{\n            title:\"\",\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            contactNumber:\"\",\n            otherContactNumber:\"\",\n        }\n    }\n}\n\n\nconst contactSchema = {\n    title:\"\",\n    firstName:\"\",\n    lastName:\"\",\n    email:\"\",\n    contactNumber:\"\",\n    otherContactNumber:\"\",\n};\n\nconst initialContacts = [\n    {label: 'Primary Contact *', title: 'primaryContact'},\n    {label: 'Secondary Contact *', title: 'secondaryContact'},\n    {label: 'Tertiary Contact', title: 'tertiaryContact'}\n];\n\nconst fields = [\n    {id: 'title', label: 'Title *'},\n    {id: 'firstName', label: 'First name *'},\n    {id: 'lastName', label: 'Last name *'},\n    {id: 'email', label: 'Email address *'},\n    {id: 'contactNumber', label: 'Contact Number *'},\n    {id: 'otherContactNumber', label: 'Other contact number *'}\n];\n\nexport default function UseForm() {\n    \n    \n    const [errorValues,seterrorValues] = useState((JSON.parse(JSON.stringify(initialFormValues))))\n    \n    \n    const resetForm = ()=>{\n        \n        setformData(initialFormValues)\n        seterrorValues((JSON.parse(JSON.stringify(initialFormValues))))\n        \n    }\n\n\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    }; \n    \n    const handleOthers = (e) => {\n        const d = e.currentTarget.dataset;\n        setContacts([...initialContacts, {...d}]);\n        setValue(d.title);\n        handleClose();\n    };\n\n    const [value, setValue] = useState('primaryContact');\n\n    const [contacts, setContacts] = useState(initialContacts);\n    const [formData,setformData] = useState(initialFormValues);\n    const [n, setN] = useState(Object.keys(formData.contacts).length);\n    const [addOthers, setAddOthers] = useState(false);\n\n    // Handel errors\n    const [errors, setErrors] = useState(errorValues);\n\n\n\n    const validate = (type='', fieldValues) => {\n        let temp = { ...errors }\n        if (\"title\" in fieldValues)\n            temp['contacts'][type].title = fieldValues.title ? \"\" : \"This field is required.\"\n        if (\"firstName\" in fieldValues)\n            temp['contacts'][type].firstName = fieldValues.firstName ? \"\" : \"This field is required.\"\n        if (\"lastName\" in fieldValues)\n            temp['contacts'][type].lastName = fieldValues.lastName ? \"\" : \"This field is required.\"\n        if (\"email\" in fieldValues) {\n            temp['contacts'][type].email = fieldValues.email ? \"\" : \"This field is required.\"\n            if (fieldValues.email)\n                temp['contacts'][type].email = (/^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,4}$/).test(fieldValues.email)\n                ? \"\"\n                : \"Email is not valid.\"\n        }\n        if (\"contactNumber\" in fieldValues){\n            temp['contacts'][type].contactNumber = fieldValues.contactNumber ? \"\" : \"This field is required.\"\n            if (fieldValues.contactNumber)\n                temp['contacts'][type].contactNumber = (/^[6-9][0-9]{9}$/).test(fieldValues.contactNumber)\n                ? \"\"\n                : \"Contact number is not valid.\"\n        }\n        if (\"otherContactNumber\" in fieldValues){\n            temp['contacts'][type].otherContactNumber = fieldValues.otherContactNumber ? \"\" : \"This field is required.\"\n            if (fieldValues.otherContactNumber)\n                temp['contacts'][type].otherContactNumber = (/^[6-9][0-9]{9}$/).test(fieldValues.otherContactNumber)\n                ? \"\"\n                : \"Other contact number is not valid.\"\n        }\n        setErrors({\n            ...temp\n        });\n    }\n\n    const validateOptional = (type='', fieldValues) => {\n        let temp = { ...errors }\n        if (fieldValues.title || fieldValues.firstName || fieldValues.lastName ||\n            fieldValues.email || fieldValues.contactNumber || fieldValues.otherContactNumber){\n                temp['contacts'][type].title = fieldValues.title ? \"\" : \"This field is required.\"\n                temp['contacts'][type].firstName = fieldValues.firstName ? \"\" : \"This field is required.\"\n                temp['contacts'][type].lastName = fieldValues.lastName ? \"\" : \"This field is required.\"\n                temp['contacts'][type].email = fieldValues.email ? \"\" : \"This field is required.\"\n                if (fieldValues.email)\n                    temp['contacts'][type].email = (/^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,4}$/).test(fieldValues.email)\n                    ? \"\"\n                    : \"Email is not valid.\"\n                temp['contacts'][type].contactNumber = fieldValues.contactNumber ? \"\" : \"This field is required.\"\n                if (fieldValues.contactNumber)\n                    temp['contacts'][type].contactNumber = (/^[6-9][0-9]{9}$/).test(fieldValues.contactNumber)\n                    ? \"\"\n                    : \"Contact number is not valid.\"\n                temp['contacts'][type].otherContactNumber = fieldValues.otherContactNumber ? \"\" : \"This field is required.\"\n                if (fieldValues.otherContactNumber)\n                    temp['contacts'][type].otherContactNumber = (/^[6-9][0-9]{9}$/).test(fieldValues.otherContactNumber)\n                    ? \"\"\n                    : \"Other contact number is not valid.\"\n        }\n        else{\n            temp['contacts'][type].title = \"\"\n            temp['contacts'][type].firstName = \"\"\n            temp['contacts'][type].lastName = \"\"\n            temp['contacts'][type].email = \"\"\n            temp['contacts'][type].contactNumber = ''\n            temp['contacts'][type].otherContactNumber = ''\n        }\n        setErrors({\n            ...temp\n        });\n        return Object.values(temp['contacts'][type]).every((x) => x === \"\") &&\n            Object.values(formData['contacts'][type]).every((x) => x !== \"\")\n    }\n\n    const validateBasic = (fieldValues) => {\n        let temp = { ...errors }\n        console.log(fieldValues.designation)\n        console.log(\"designation\" in fieldValues)\n        if (\"designation\" in fieldValues)\n            temp[\"designation\"] = fieldValues.designation ? \"\" : \"This field is required.\"\n        if (\"brandname\" in fieldValues)\n            temp[\"brandname\"] = fieldValues.brandname ? \"\" : \"This field is required.\"\n        if (\"clientname\" in fieldValues)\n            temp[\"clientname\"] = fieldValues.clientname ? \"\" : \"This field is required.\"\n        if (\"domain\" in fieldValues)\n            temp[\"domain\"] = fieldValues.domain ? \"\" : \"This field is required.\"\n        if (\"baselocation\" in fieldValues)\n            temp[\"baselocation\"] = fieldValues.baselocation ? \"\" : \"This field is required.\"\n        if (\"companyaddress\" in fieldValues)\n            temp[\"companyaddress\"] = fieldValues.companyaddress ? \"\" : \"This field is required.\"\n        \n        setTimeout(() => {\n            setErrors({...temp})    \n        }, 100)\n        console.log(\"from temp\",temp)\n        console.log(\"from errors\",errors)\n    }\n\n    // End handel errors\n    \n    const setformvalue=(e)=>{\n        let new_form = {...formData}\n        e.target.id?\n        new_form['contacts'][e.target.name][e.target.id] = e.target.value:\n        new_form[e.target.name] = e.target.value;\n        if (e.target.name === 'primaryContact' || e.target.name === 'secondaryContact')\n            validate(e.target.name, { [e.target.id]: e.target.value });\n        if (e.target.id && e.target.name !== 'primaryContact' && e.target.name !== 'secondaryContact')\n            validateOptional(e.target.name, new_form['contacts'][e.target.name])\n        if (e.target.name === 'designation' )\n            validateBasic({ [e.target.name]: e.target.value })\n        if (e.target.name === 'brandname' )\n            validateBasic({ [e.target.name]: e.target.value })\n        if (e.target.name === 'domain' )\n            validateBasic({ [e.target.name]: e.target.value }) \n        if (e.target.name === 'baselocation' )\n            validateBasic({ [e.target.name]: e.target.value })\n        if (e.target.name === 'companyaddress' )\n            validateBasic({ [e.target.name]: e.target.value })\n        if (e.target.name === 'clientname' )\n            validateBasic({ [e.target.name]: e.target.value })            \n\n        if (validateOptional('tertiaryContact', new_form['contacts']['tertiaryContact'])){\n            if(n===3 ? true : (validateOptional(`otherContact${n-3}`, new_form.contacts[`otherContact${n-3}`]) &&\n                Object.keys(new_form.contacts).length <= n)){\n                    setAddOthers(true)\n            }\n            else{\n                setAddOthers(false)\n            }\n        }\n        else{\n            setAddOthers(false)\n        }\n        setformData(new_form);\n        console.log(errors)\n    }\n\n    const handleAddOthers = () => {\n        let new_form = {...formData}\n        new_form['contacts'] = {...new_form['contacts'], [`otherContact${n-2}`]:{...contactSchema}};\n        let new_errors = {...errors}\n        new_errors['contacts'] = {...new_errors['contacts'], [`otherContact${n-2}`]:{...contactSchema}};\n        const d = {label: `Other Contact ${n-2}`, title: `otherContact${n-2}`}\n        setformData(new_form)\n        setContacts([...initialContacts, {...d}]);\n        setErrors(new_errors)\n        setValue(d.title);\n        setN(Object.keys(new_form.contacts).length);\n        setAddOthers(false)\n    };\n\n    // Sam\n    const [store,setStore] = useState(\"\")\n    const [login,setLogin] = useState(true)\n\n    const authStore= ()=>{\n\n        let store = localStorage.getItem('authorization')\n        if(store && login)\n        {setLogin(true)\n         setStore(store) \n         console.log(store)  \n        }   \n    }\n\n    const submitForm = async(e) =>{\n        console.log(formData)\n        e.preventDefault()\n        // let token = \"Bearer \"+ store\n        const token = localStorage.getItem('authorization')\n        try {\n            await axios.post('http://localhost:4000/cims', {formData},  \n                                                    {headers: {\n                                                        'authorization': `bearer ${token}`\n                                                        }}) \n            .then(res=>{\n                alert('Customer Created Successfully!') \n                console.log(res)\n            })  \n            \n        } catch (error) {\n            console.log(error)\n        }      \n    }\n\n    const handleSaveBtn = () =>{\n        return(\n            formData.designation === \"\" || formData.brandname === \"\" || formData.domain === \"\" || formData.baselocation === \"\" || formData.clientname === \"\" ||formData.companyaddress === \"\" || \n            formData.contacts.primaryContact.title === \"\" || formData.contacts.primaryContact.firstName === \"\" || formData.contacts.primaryContact.lastName === \"\" || formData.contacts.primaryContact.email === \"\" || formData.contacts.primaryContact.contactNumber === \"\" ||\n            formData.contacts.secondaryContact.title === \"\" || formData.contacts.secondaryContact.firstName === \"\" || formData.contacts.secondaryContact.lastName === \"\" || formData.contacts.secondaryContact.email === \"\" || formData.contacts.secondaryContact.contactNumber === \"\"\n        )   \n    } \n\n\n\n    //end Sam\n\n    return {initialFormValues,\n        seterrorValues,\n        resetForm,\n        fields,\n        formData,\n        value,\n        setformvalue,\n        contacts,\n        setValue,\n        open,\n        handleClick,\n        anchorEl,\n        handleClose,\n        n,\n        handleOthers,\n        addOthers,\n        handleAddOthers,\n        errors,\n        authStore,\n        submitForm,\n        handleSaveBtn,\n        setformData\n    }\n}","import React, { useEffect,useState } from 'react'\r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport { Typography } from '@mui/material'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Switch from '@mui/material/Switch';\r\nimport { Box, Tab, Grid, TextField, Button, MenuItem, Menu, FormControl } from \"@mui/material\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport { KeyboardArrowDownRounded as KeyboardArrowDownRoundedIcon,\r\n    AddRounded as AddRoundedIcon,\r\n    PhoneEnabled\r\n} from '@mui/icons-material';\r\nimport '../styles/FormStyle.css'\r\nimport UseForm from './UseForm';\r\n\r\nconst useStyles = makeStyles({  \r\n    field1:{\r\n        width:'98%',\r\n        margin:'1%'\r\n    },\r\n    field2:{\r\n        margin:'1%',\r\n    },   \r\n    field3:{\r\n        width:'78%',\r\n        margin:'1%'\r\n    },\r\n\r\n})\r\n\r\nfunction CreateForm(){\r\n    const navigate = useNavigate()\r\n    const [unmount , setUnmount] = useState(false)\r\n    const {\r\n        initialFormValues,\r\n        setError,\r\n        resetForm,\r\n        fields,\r\n        formData,\r\n        value,\r\n        setformvalue,\r\n        contacts,\r\n        setValue,\r\n        open,\r\n        handleClick,\r\n        anchorEl,\r\n        handleClose,\r\n        n,\r\n        handleOthers,\r\n        addOthers,\r\n        handleAddOthers,\r\n        errors,\r\n        handleSaveBtn,\r\n        authStore,\r\n        submitForm\r\n    } = UseForm();\r\n\r\n    useEffect(() =>{\r\n        resetForm()\r\n    \r\n    return async() => {\r\n        await window.location.reload()\r\n      }\r\n    },[])\r\n\r\n\r\n\r\n      \r\n    const classes = useStyles()\r\n    const url = \"http://localhost:4000/cims\"\r\n    \r\n    \r\n    const inputField = fields.map(field => {\r\n        return(\r\n            <Grid item xs={12} sm={6} md={4} key={`${value}.${field.id}`}>\r\n                <TextField \r\n                    variant=\"outlined\"\r\n                    label={field.label}\r\n                    name={value}\r\n                    id={field.id}\r\n                    value= {formData.contacts[value][field.id]}\r\n                    onChange={(e)=>setformvalue(e)}\r\n                    onBlur={setformvalue}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    autoComplete=\"none\"\r\n                    {...(errors.contacts[value][field.id] && { error: true, helperText: errors.contacts[value][field.id] })}\r\n                />\r\n            </Grid>\r\n        );\r\n    });\r\n\r\n\r\n    const clearit = () => {\r\n        const inputField = fields.map(field => {\r\n            return(\r\n                <Grid item xs={12} sm={6} md={4} key={`${value}.${field.id}`}>\r\n                    <TextField \r\n                        {...true&& { error: true, helperText: \"errors.contacts[value][field.id]\" }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        });\r\n    }\r\n\r\n    const tabs = contacts.map(contact =>\r\n        <Tab key={contact.title} label={contact.label} value={contact.title} sx={{textTransform: 'none'}}/>\r\n    );\r\n\r\n\r\n    const dropDown = (\r\n        <Grid>\r\n            <FormControl size=\"small\">\r\n                <Button \r\n                    size=\"small\" \r\n                    id=\"othersBtn\" \r\n                    sx={{color: 'gray', borderColor: 'white'}} \r\n                    variant=\"outlined\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"others\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <KeyboardArrowDownRoundedIcon sx={{fontSize: \"2.5rem\"}}/>\r\n                </Button>\r\n                <Menu\r\n                    id='others'\r\n                    sx={{maxHeight: 230, overflow: 'visible'}}\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'othersBtn',\r\n                    }}\r\n                >\r\n                    {[...Array(n-3)].map((e, i) => {\r\n                        return(\r\n                            <MenuItem\r\n                                key={i+1}\r\n                                data-label={`Other Contact ${i+1}`}\r\n                                data-title={`otherContact${i+1}`}\r\n                                onClick={handleOthers}\r\n                            >\r\n                            {`Other Contact ${i+1}`}\r\n                            </MenuItem>\r\n                        );\r\n                    })}\r\n                </Menu>\r\n            </FormControl>\r\n        </Grid>\r\n    );\r\n\r\n    return(\r\n        <>\r\n            <div className=\"FormContainer\">\r\n                \r\n                <div className=\"form-header\">\r\n                    <h2>\r\n                        Customer Information\r\n                    </h2>\r\n                    \r\n                    <div className=\"header-end\">\r\n                        <div>\r\n                            <p>Edit mode</p>\r\n                            <Switch defaultChecked color=\"success\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-body\">    \r\n                    <form>\r\n                        <Typography className={classes.lables}>\r\n                            Legal Name of the entity\r\n                        </Typography>\r\n                        <TextField\r\n                            className={classes.field1}\r\n                            label=\"enter designation\"\r\n                            variant=\"outlined\"\r\n                            name=\"designation\"\r\n                            value={formData.designation}\r\n                            fullWidth\r\n                            required\r\n                            size=\"small\"\r\n                            onChange={(e)=>{setformvalue(e)}}\r\n                            onBlur={setformvalue}\r\n                            {...(errors.designation && \r\n                            { error: true, helperText: errors.designation })}\r\n                            \r\n                        />\r\n                        <Grid container spacing={2} >\r\n                                <Grid container item xs={6} direction=\"column\" >            \r\n                                    <div >\r\n                                        <Typography>\r\n                                            Brand Name\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            className={classes.field2}\r\n                                            label=\"enter name\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"brandname\"\r\n                                            fullWidth\r\n                                            required\r\n                                            size=\"small\"\r\n                                            onChange={(e)=>{setformvalue(e)}}\r\n                                            onBlur={setformvalue}\r\n                                            {...(errors.brandname && \r\n                                            { error: true, helperText: errors.brandname })}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div >\r\n                                    <Typography>\r\n                                        Base Location\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        className={classes.field2}\r\n                                        label=\"enter location\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"baselocation\"\r\n                                        fullWidth\r\n                                        required\r\n                                        size=\"small\"\r\n                                        onChange={(e)=>{setformvalue(e)}}\r\n                                        onBlur={setformvalue}\r\n                                        {...(errors.baselocation && \r\n                                        { error: true, helperText: errors.baselocation })}\r\n                                    />\r\n                                </div>     \r\n                                </Grid>\r\n\r\n                            <Grid container item xs={6} direction=\"column\" >                        \r\n                                \r\n                                <div >\r\n                                    <Typography>\r\n                                        Domain/Sector\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        className={classes.field2}\r\n                                        label=\"enter domain/sector\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"domain\"\r\n                                        fullWidth\r\n                                        required\r\n                                        size=\"small\"\r\n                                        onChange={(e)=>{setformvalue(e)}}\r\n                                        onBlur={setformvalue}\r\n                                        {...(errors.domain && \r\n                                        { error: true, helperText: errors.domain })}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div >\r\n                                    <Typography>\r\n                                        Active Client\r\n                                    </Typography>\r\n                                    <Box sx={{ minWidth: 120 }} className={classes.field2}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id=\"label\">Select a Client name</InputLabel>\r\n                                        <Select\r\n                                        name=\"clientname\"\r\n                                        onChange={setformvalue}\r\n                                        onBlur={(e)=>{setformvalue(e)}}\r\n                                        {...(errors.clientname && \r\n                                        { error: true, helperText: errors.clientname })}\r\n                                        size=\"small\"\r\n                                        input={<OutlinedInput label=\"Select a Client name\" />}\r\n                                        >\r\n                                        <MenuItem value={\"client 1\"}>client 1</MenuItem>\r\n                                        <MenuItem value={\"client 2\"}>client 2</MenuItem>\r\n                                        <MenuItem value={\"client 3\"}>client 3</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </Box>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Typography className={classes.lables}>\r\n                            Complete address of the company\r\n                        </Typography>\r\n                        \r\n                        <TextField\r\n                            className={classes.field3}\r\n                            label=\"Enter location\"\r\n                            variant=\"outlined\"\r\n                            name=\"companyaddress\"\r\n                            fullWidth\r\n                            required\r\n                            size=\"small\"\r\n                            onChange={setformvalue}\r\n                            onBlur={(e)=>{setformvalue(e)}}\r\n                            {...(errors.companyaddress && \r\n                            { error: true, helperText: errors.companyaddress })}\r\n                        />\r\n\r\n                        <Link to=\"/\">\r\n                            <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            id=\"cancel-btn\"\r\n                            className={classes.button}\r\n                            >\r\n                            Cancel\r\n                            </Button>\r\n                        </Link>\r\n                        \r\n                        { handleSaveBtn()\r\n                        ? <Button\r\n                        disabled\r\n                        onClick={submitForm}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        id=\"save-btn\"\r\n                        className={classes.button}\r\n                        >\r\n                        Save\r\n                        </Button>\r\n\r\n                        : <Button\r\n                        onClick={submitForm}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        id=\"save-btn\"\r\n                        className={classes.button}\r\n                        >\r\n                        Save\r\n                        </Button>\r\n                        }\r\n                        \r\n                    </form>\r\n                \r\n                    <div className=\"contact-form\">\r\n                    <Box sx={{width: '100%', typography: 'body1'}}>\r\n                        <TabContext value={value}>\r\n                            <Box sx={{ borderTop: 2, borderBottom: 2, borderColor: 'divider' }}>\r\n                                <TabList variant='scrollable' onChange={(e, newValue) => setValue(newValue)}>\r\n                                    {tabs}\r\n                                    {n>4? dropDown : <></>}\r\n                                    <Grid container>\r\n                                        <Button\r\n                                            id=\"addOthersBtn\" \r\n                                            sx={{color: 'gray', borderColor: 'white'}} \r\n                                            variant={!addOthers?\"contained\":\"outlined\"}\r\n                                            onClick={handleAddOthers}\r\n                                            disabled={!addOthers}\r\n                                        >\r\n                                            <AddRoundedIcon sx={{fontSize: \"2rem\"}} />\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </TabList>\r\n                            </Box>\r\n                            <TabPanel value={value}>\r\n                                <Grid container spacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                                    {inputField}\r\n                                </Grid>\r\n                            </TabPanel>\r\n                        </TabContext>\r\n                    </Box> \r\n                    </div>\r\n                \r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateForm\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { AppBar,\r\n        Toolbar,\r\n        FormControl,\r\n        TextField,\r\n        IconButton,\r\n        Drawer,\r\n        Typography} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { HomeRounded as HomeRoundedIcon,\r\n         ArrowBackRounded as ArrowBackRoundedIcon,\r\n         ArrowForwardRounded as ArrowForwardRoundedIcon,\r\n         SearchRounded as SearchRoundedIcon,\r\n         MenuRounded as MenuRoundedIcon} from '@mui/icons-material';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginLeft: 'auto',\r\n    }\r\n});\r\n\r\nexport default function Header() {\r\n    const iconStyle = {color: 'gray', fontSize: '2.5rem', margin: '0.5rem auto'};\r\n    const menuStyle = {color: 'gray', fontSize: '2.5rem', margin: '0.5rem 1.5rem'};\r\n    const searchStyle = {color: 'gray', fontSize: '2.5rem'};\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false\r\n    });\r\n\r\n    const classes = useStyles();\r\n    \r\n    const { mobileView, drawerOpen } = state;\r\n    \r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n          return window.innerWidth < 768\r\n            ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n            : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n        };\r\n    \r\n        setResponsiveness();\r\n        window.addEventListener(\"resize\", () => setResponsiveness());\r\n    \r\n        return () => {\r\n          window.removeEventListener(\"resize\", () => setResponsiveness());\r\n        }\r\n    }, []);\r\n\r\n\r\n    const leftMenu = (\r\n        <div>\r\n                <HomeRoundedIcon sx={iconStyle} />\r\n\r\n        </div>\r\n    );\r\n\r\n    const rightMenu = (\r\n        <div className={classes.root}>\r\n            <form>\r\n                <FormControl>\r\n                    <Typography variant=\"body1\" align=\"center\" mt={2} mr={1}>\r\n                        Username\r\n                    </Typography>\r\n                </FormControl>\r\n                <FormControl sx={{width: 160}}>\r\n                    <TextField\r\n                        label=\"enter user name\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        margin=\"dense\"\r\n                    />\r\n                </FormControl>\r\n                <IconButton\r\n                type=\"submit\"\r\n                >\r\n                <SearchRoundedIcon sx={searchStyle} />\r\n                </IconButton>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n            <Toolbar className=\"toolbar\">\r\n                {leftMenu}\r\n                {rightMenu}\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n        return (\r\n          <Toolbar>\r\n            <IconButton\r\n              {...{\r\n                edge: \"start\",\r\n                color: \"inherit\",\r\n                \"aria-label\": \"menu\",\r\n                \"aria-haspopup\": \"true\",\r\n                onClick: handleDrawerOpen,\r\n              }}\r\n            >\r\n              <MenuRoundedIcon sx={menuStyle} />\r\n            </IconButton>\r\n            <Drawer\r\n                {...{\r\n                    anchor: \"top\",\r\n                    open: drawerOpen,\r\n                    onClose: handleDrawerClose,\r\n                }}\r\n                >\r\n                <div>{rightMenu}</div>\r\n            </Drawer>\r\n            <div>{leftMenu}</div>\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <header>\r\n            <AppBar color=\"transparent\">\r\n                {mobileView ? displayMobile() : displayDesktop()}\r\n            </AppBar>\r\n        </header>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport {Button,\r\n        FormControl,\r\n        Grid,\r\n        InputLabel,\r\n        MenuItem,\r\n        Select,\r\n        Typography} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    menu: {\r\n        marginTop: '6rem',\r\n        marginRight: '5rem'\r\n    },\r\n    userAdmin: {\r\n        textAlign: 'right',\r\n        paddingRight: '2.5rem',\r\n    },\r\n    buttons: {\r\n        marginTop: '0.5rem',\r\n        marginLeft: '25%',\r\n    },\r\n    cimstext:{\r\n        position:'absolute',\r\n        left:'16%'\r\n    }\r\n});\r\n\r\nexport default function PageHeader() {\r\n    const [sortBy, setSortBy] = useState(\"\");\r\n    const classes = useStyles();\r\n    const values = [\"None\",\r\n                    \"By ID\",\r\n                    \"By location\",\r\n                    \"By start date\",\r\n                    \"By Status\",\r\n                    \"By associate name\",\r\n                    \"By CompanyUID\"\r\n                ];\r\n    const handleSortBy = (e) => {\r\n        if (e.target.value===\"None\") {\r\n            setSortBy(\"\");\r\n        } else {\r\n            setSortBy(e.target.value);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className={classes.menu}>\r\n            <div className={classes.user}>\r\n                <Typography variant=\"body1\" className={classes.userAdmin}>\r\n                    User-Admin/Approver\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.buttons}>\r\n                <Grid \r\n                    justifyContent=\"space-between\"\r\n                    container \r\n                >\r\n                    <Grid item >\r\n                        <Typography variant=\"h4\" className={classes.cimstext}>\r\n                            CIMS\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to='/createclient'>\r\n                            \r\n                            <Button variant=\"contained\" style={{backgroundColor: 'chocolate'}}>\r\n                                Create a customer\r\n                            </Button>\r\n                        </Link>\r\n                        <FormControl size=\"small\" sx={{ minWidth: 120, margin: '0 2.5rem 0 1rem' }}>\r\n                            <InputLabel id=\"sortBy\">sort by</InputLabel>\r\n                            <Select labelId=\"sortBy\"\r\n                                id=\"select\" \r\n                                value={sortBy}\r\n                                label=\"sortBy\"\r\n                                onChange={handleSortBy}\r\n                            >\r\n                                {values.map((values) => (\r\n                                    <MenuItem\r\n                                        key={values}\r\n                                        value={values}\r\n                                    >\r\n                                    {values}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState,useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport axios from 'axios'\r\nimport '../styles/FormStyle.css'\r\nimport { Sync } from \"@mui/icons-material\";\r\n\r\n\r\n\r\n\r\nfunction EditButton() {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"fab\" color=\"purple\" endIcon={<EditIcon />}>\r\n        Edit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.grey[300],\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 15,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\n// function createData(id, company_uid, company_name, primary_contact, action ) {\r\n//   return { id, company_uid, company_name, primary_contact, action };\r\n// }\r\n\r\nfunction CIMSTable() {\r\n\r\n  \r\n  const [clientsList,setclientsList] = useState([])\r\n  \r\n  useEffect(async()=>{\r\n    await axios.post('http://localhost:4000/login')\r\n    .then(data=>data)\r\n    .then(tokenObject=>{\r\n      console.log(tokenObject.data.Token)\r\n      localStorage.setItem('authorization',tokenObject.data.Token)\r\n    })\r\n\r\n    const token = localStorage.getItem('authorization')\r\n    await axios.get('http://localhost:4000/cims', {headers: {\r\n                                                      'authorization': `bearer ${token}`\r\n                                                      }})\r\n    .then(data=>data)\r\n    .then(list=>{\r\n      setclientsList(list.data)\r\n      console.log(list.data)\r\n    })\r\n  },[])\r\n\r\n  \r\n  return (\r\n\r\n    <div className=\"FormContainer\"> {/*//using form container's alignment*/}\r\n        <TableContainer component={Paper} align=\"right\" >\r\n        <Table sx={{ maxWidth: '100%' }} aria-label=\"customized table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <StyledTableCell>ID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">CompanyUID</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Company Name</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Primary Contact</StyledTableCell>\r\n                <StyledTableCell align=\"left\">Action</StyledTableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {clientsList.map((client,idx) => (\r\n                <StyledTableRow key={client.id}>\r\n                <StyledTableCell component=\"th\" scope=\"client\">\r\n                    {idx+1}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client._id}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client.brandname}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{client.contacts.primaryContact.title}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">{EditButton()}</StyledTableCell>\r\n                </StyledTableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CIMSTable;","import './App.css';\r\nimport CollapsibleSidebar from './components/Collapsible-Sidebar'\r\nimport CreateForm from './components/ClientCreation-Form';\r\nimport { HashRouter as Router , Route ,Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport PageHeader from './components/PageHeader';\r\nimport CIMSTable from './components/ReadTable';\r\n\r\nfunction App() {\r\n  return (    \r\n    <div>\r\n        <>\r\n          <Header/>\r\n          <CollapsibleSidebar/>    \r\n        </>\r\n        \r\n        <Router>\r\n          <Routes>\r\n          <Route exact path='/' element={\r\n                                          <>\r\n                                            <PageHeader />\r\n                                            <CIMSTable/>\r\n                                          </>} >\r\n          </Route>\r\n\r\n          <Route path='/createclient' element={<>\r\n                                            <PageHeader />\r\n                                            <CreateForm/>\r\n                                          </>} >\r\n          </Route>\r\n\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}